<?php

function am_display_manage_assets() {
	$action      = ( empty( $_GET['action'] ) ) ? 'new' : $_GET['action'];
	$action_type = ( 'edit' === $action ) ? 'Edit' : 'Add New';
	$current     = null;
	$is_dev      = am_is_dev();
	$post_types  = am_get_registered_post_types();
	$taxes       = am_get_registered_taxes();
	$which       = am_which_page();
	$ui          = new AM_Admin_UI();

	if ( 'edit' === $action ) {
		$current = $post_types[ $_GET['name'] ];
	}
	?>

    <div class="wrap asset-manager-wrapper">
        <h1><?php echo get_admin_page_title(); ?></h1>
        <h2 class="sr-only">Notification placeholder</h2>
        <form method="post" action="<?php esc_url( admin_url( 'admin-post.php' ) ); ?>" id="asset-manager-form" class="mt-3">
            <div class="row">
                <div class="col-xs-12 col-lg-5">
                    <div class="section-wrapper">
                        <div class="section-header">
                            <h3><?php echo sprintf( __( '%s Asset Type', AM_TEXT ), $action_type ); ?></h3>
                        </div>
                        <div class="section-body">
							<?php wp_nonce_field( "am_form_nonce_action", "am_form_nonce_field" ); ?>
                            <input type="hidden" id="data_type" name="data_type" value="<?php echo strtolower( $which ); ?>">
                            <input type="hidden" id="page_action" name="page_action" value="<?php echo $action; ?>">
							<?php if ( 'edit' === $action ) : ?>
                                <input type="hidden" name="original" id="original" value="<?php echo $current['name']; ?>">
							<?php endif; ?>
							<?php
							/**
							 * Make the singular label text field
							 *
							 * @since 0.5.0
							 */
							echo $ui->make_text_field( [
								'desc'        => esc_attr__( 'Please use only alphanumeric characters and spaces. This field also creates your asset type slug.', AM_TEXT ),
								'label_text'  => esc_attr__( 'Singular Label', AM_TEXT ),
								'maxlength'   => 20,
								'name'        => 'singular_label',
								'placeholder' => esc_attr__( '(e.g. Asset)', AM_TEXT ),
								'required'    => true,
								'value'       => ( ! empty( $current ) ) ? $current['singular_label'] : '',
							] );

							/**
							 * Make the plural label text field
							 *
							 * @since 0.5.0
							 */
							echo $ui->make_text_field( [
								'desc'        => esc_attr__( 'Please use only alphanumeric characters and spaces', AM_TEXT ),
								'label_text'  => esc_attr__( 'Plural Label', AM_TEXT ),
								'maxlength'   => 20,
								'name'        => 'label',
								'placeholder' => esc_attr__( '(e.g. Assets)', AM_TEXT ),
								'required'    => true,
								'value'       => ( ! empty( $current ) ) ? $current['label'] : '',
							] );

							/**
							 * Make the name field, which is hidden
							 * and takes value from either the singular_label
							 * field (lowercased), or the value of $current['name'].
							 *
							 * @since 0.5.0
							 */
							echo $ui->make_text_field( [
								'desc'       => esc_attr__( 'This is the slug of your new asset type. It is generated by filling in the Singular Label fields above, but you may change it if necessary. Please use only letters, numbers, and the underscore character.', AM_TEXT ),
								'label_text' => esc_attr__( 'Name', AM_TEXT ),
								'maxlength'  => 20,
								'name'       => 'name',
								'value'      => ( ! empty( $current ) ) ? $current['name'] : '',
								'visible'    => true,
							] );

							if ( 'edit' === $action ) {
								$checkboxes['boxes'][] = [
									'checked'    => false,
									'value'      => true,
									'value_type' => 'update_posts',
									'label'      => esc_attr__( 'Migrate assets to the renamed asset type', AM_TEXT ),
								];
								echo $ui->make_checkboxes( [
									'description' => esc_attr__( 'You may migrate assets when you update your asset type name.', AM_TEXT ),
									'label_text'  => esc_attr__( 'Migrate Posts', AM_TEXT ),
									'name'        => 'update_posts',
									'checkboxes'  => $checkboxes,
								] );
							}

							/**
							 * Make the menu icon field
							 */
							echo $ui->make_input_group( [
								'btn_text'    => esc_attr__( 'Select Icon', AM_TEXT ),
								'desc'        => esc_attr__( 'Select an icon for your asset type. The menu icon will only be visible if Show in Menu is set to Yes.', AM_TEXT ),
								'label_text'  => esc_attr__( 'Menu Icon', AM_TEXT ),
								'name'        => 'menu_icon',
								'placeholder' => esc_attr__( 'wordpress_dashicons-admin-generic', AM_TEXT ),
								'required'    => false,
								'value'       => ( ! empty ( $current ) ) ? $current['menu_icon'] : '',

							] );
							?>
							<?php
							/**
							 * Is the custom content type public?
							 */
							$select['options'] = [
								[
									'text'  => esc_attr__( 'No', AM_TEXT ),
									'value' => '0'
								],
								[
									'default' => true,
									'text'    => esc_attr__( 'Yes', AM_TEXT ),
									'value'   => '1'
								]
							];

							$selected           = isset( $current ) ? am_coerce_bool( $current['public'] ) : '';
							$select['selected'] = ( ! empty( $selected ) ) ? $current['public'] : '';

							echo $ui->make_select_field( [
								'classes'    => false,
								'desc'       => esc_attr__( 'Allow assetss of this type to be displayed publicly?', AM_TEXT ),
								'label_text' => esc_attr__( 'Public', AM_TEXT ),
								'name'       => 'public',
								'selections' => $select,
							] );
							?>
							<?php
							/**
							 * Select whether the new asset type is available via
							 * the admin bar at the top of the screen
							 *
							 * @since 0.5.0
							 */
							$select['options'] = [
								[
									'text'  => esc_attr__( 'No', AM_TEXT ),
									'value' => '0'
								],
								[
									'default' => true,
									'text'    => esc_attr__( 'Yes', AM_TEXT ),
									'value'   => '1'
								]
							];

							$selected           = isset( $current ) ? am_coerce_bool( $current['show_in_admin_bar'] ) : '';
							$select['selected'] = ( ! empty( $selected ) ) ? $current['show_in_admin_bar'] : '';

							echo $ui->make_select_field( [
								'classes'    => false,
								'desc'       => esc_attr__( 'Make this asset type available from the + menu on the top administration bar?', AM_TEXT ),
								'label_text' => esc_attr__( 'Show in Admin Bar', AM_TEXT ),
								'name'       => 'show_in_admin_bar',
								'selections' => $select,
							] );
							?>
							<?php
							/**
							 * Where should this asset type be displayed in the
							 * admin sidebar menu?
							 *
							 * @since 0.5.0
							 */
							$select['options'] = [
								[
									'default' => true,
									'text'    => esc_attr__( 'No', AM_TEXT ),
									'value'   => '0'
								],
								[
									'text'  => esc_attr__( 'Yes', AM_TEXT ),
									'value' => '1'
								]
							];

							$selected           = isset( $current ) ? am_coerce_bool( $current['show_in_menu'] ) : '';
							$select['selected'] = ( ! empty( $selected ) ) ? $current['show_in_menu'] : '';

							echo $ui->make_select_field( [
								'classes'    => false,
								'desc'       => esc_attr__( 'Make this asset type available in the top-level administration menu?', AM_TEXT ),
								'label_text' => esc_attr__( 'Show in Menu', AM_TEXT ),
								'name'       => 'show_in_menu',
								'selections' => $select,
							] );
							?>
							<?php
							/**
							 * Should this asset type be selectable in navigation menu creation?
							 *
							 * @since 0.5.0
							 */
							$select['options'] = [
								[
									'text'  => esc_attr__( 'No', AM_TEXT ),
									'value' => '0'
								],
								[
									'default' => true,
									'text'    => esc_attr__( 'Yes', AM_TEXT ),
									'value'   => '1'
								]
							];

							$selected           = isset( $current ) ? am_coerce_bool( $current['show_in_nav_menus'] ) : '';
							$select['selected'] = ( ! empty( $selected ) ) ? $current['show_in_nav_menus'] : '';

							echo $ui->make_select_field( [
								'classes'    => false,
								'desc'       => esc_attr__( 'Make this asset type available for selection in navigation menus?', AM_TEXT ),
								'label_text' => esc_attr__( 'Show in Nav Menus', AM_TEXT ),
								'name'       => 'show_in_nav_menus',
								'selections' => $select,
							] );
							?>
							<?php
							/**
							 * Should this asset type be hierarchical, like pages?
							 *
							 * @since 0.5.0
							 */
							$select['options'] = [
								[
									'default' => true,
									'text'    => esc_attr__( 'No', AM_TEXT ),
									'value'   => '0'
								],
								[
									'text'  => esc_attr__( 'Yes', AM_TEXT ),
									'value' => '1'
								]
							];

							$selected           = isset( $current ) ? am_coerce_bool( $current['hierarchical'] ) : '';
							$select['selected'] = ( ! empty( $selected ) ) ? $current['hierarchical'] : '';

							echo $ui->make_select_field( [
								'classes'    => false,
								'desc'       => esc_attr__( 'Should assets of this type have parent/child relationships (like pages)?', AM_TEXT ),
								'label_text' => esc_attr__( 'Hierarchical', AM_TEXT ),
								'name'       => 'hierarchical',
								'selections' => $select,
							] );
							?>
							<?php
							echo $ui->make_textarea_field( [
								'desc'        => esc_attr__( 'This may or may not appear on the front-end depending on theme settings.',
									AM_TEXT ),
								'label_text'  => esc_attr__( 'Description', AM_TEXT ),
								'name'        => 'description',
								'placeholder' => esc_attr__( 'Enter a short description of your asset type', AM_TEXT ),
								'rows'        => '4'
							] );
							?>
							<?php
							/**
							 * Output support checkboxes
							 *
							 * @since 0.5.0
							 */
							$checkboxes['boxes'] = [
								[
									'checked' => true,
									'value'   => 'title',
									'label'   => esc_attr__( 'Title', AM_TEXT ),
								],
								[
									'checked' => true,
									'value'   => 'editor',
									'label'   => esc_attr__( 'Editor', AM_TEXT ),
								],
								[
									'checked' => false,
									'value'   => 'comments',
									'label'   => esc_attr__( 'Comments', AM_TEXT ),
								],
								[
									'checked' => true,
									'value'   => 'revisions',
									'label'   => esc_attr__( 'Revisions', AM_TEXT ),
								],
								[
									'checked' => false,
									'value'   => 'trackbacks',
									'label'   => esc_attr__( 'Trackbacks', AM_TEXT ),
								],
								[
									'checked' => true,
									'value'   => 'author',
									'label'   => esc_attr__( 'Author', AM_TEXT ),
								],
								[
									'checked' => true,
									'value'   => 'excerpt',
									'label'   => esc_attr__( 'Excerpt', AM_TEXT ),
								],
								[
									'checked' => false,
									'value'   => 'page-attributes',
									'label'   => esc_attr__( 'Page Attributes', AM_TEXT ),
								],
								[
									'checked' => true,
									'value'   => 'thumbnail',
									'label'   => esc_attr__( 'Thumbnail', AM_TEXT ),
								],
								[
									'checked' => false,
									'value'   => 'custom-fields',
									'label'   => esc_attr__( 'Custom Fields', AM_TEXT ),
								],
								[
									'checked' => true,
									'value'   => 'post-formats',
									'label'   => esc_attr__( 'Post Formats', AM_TEXT ),
								],

							];

							echo $ui->make_checkboxes( [
								'description' => esc_attr__( 'Assign desired editor screen features to this asset type', AM_TEXT ),
								'label_text'  => esc_attr__( 'Supported Options', AM_TEXT ),
								'name'        => 'supports',
								'checkboxes'  => $checkboxes,
							] );
							?>
							<?php
							if ( ! empty( $taxes ) ) {
								// TODO Change this so that it only displays taxonomies created through our plugin? Need to discuss.
								$checkboxes['boxes'] = [];

								foreach ( $taxes as $tax ) {
									$checkboxes['boxes'][] = [
										'checked'    => false,
										'value'      => $tax['name'],
										'value_type' => 'added_taxonomies',
										'label'      => $tax['label'],
									];
								}
								echo $ui->make_checkboxes( [
									'description' => esc_attr__( 'Choose from available registered metadata to assign them to this asset type', AM_TEXT ),
									'label_text'  => esc_attr__( 'Metadata', AM_TEXT ),
									'name'        => 'taxonomies',
									'checkboxes'  => $checkboxes,
								] );
							} else {
								?>
                                <div class="row">
                                    <div class="col">
                                        <p class="text-center"><?php echo __( 'No metadata types have been created. You may continue with asset type creation and assign metadata later.',
												AM_TEXT ); ?></p>
                                    </div>
                                </div>
								<?php
							}
							?>
                        </div>
                        <div class="section-footer">
                            <input type="submit" class="button button-primary" id="am_submit" name="am_submit"
                                   value="<?php echo sprintf( __( '%s Metadata', AM_TEXT ), $action_type ); ?>">
                            <input type="reset" class="button button-secondary ml-2" value="<?php echo esc_attr__( 'Reset Form', AM_TEXT ); ?>">
                        </div>
                    </div>
                </div>
				<?php am_assets_table( $is_dev, $post_types ); ?>
            </div>
        </form>
    </div>

	<?php
	/**
	 * Call the icons modal so that it's available for use
	 *
	 * @since 0.5.0
	 */
	am_icons_modal();
}

/**
 * Output the table column  for reviewing registered asset types
 *
 * @param bool  $is_dev     false if we aren't viewing this page on localhost
 * @param array $post_types array of registered post types
 *
 * @since 0.5.0
 *
 */
function am_assets_table( bool $is_dev, array $post_types ) {
	$url = 'admin.php?page=manage_asset_types';
	?>
    <div class="col-xs-12 col-lg-7 table-col">
        <div class="section-wrapper at-a-glance">
            <div class="section-body asset-manager-table-wrapper">
                <table class="table table-striped asset-manager-table">
                    <thead>
                    <tr>
                        <th scope="col">
                            Assets
                        </th>
                        <th scope="col">
                            Assigned Taxonomies
                        </th>
                        <th scope="col">
                            Slug
                        </th>
                        <th class="text-center" scope="col">
                            Count
                        </th>
                    </tr>
                    </thead>
                    <tbody>
					<?php
					foreach ( $post_types as $post_type ) {
						?>
                        <tr>
                            <th scope="row">
                                <a class="row-title"
                                   href="<?php echo admin_url( 'edit.php?post_type=' . $post_type['name'] ); ?>"><strong><?php echo $post_type['label']; ?></strong></a>
                                <br>
                                <ul class="row-options">
                                    <li><a class="button button-primary" href="<?php echo admin_url( $url . '&action=edit&name=' . $post_type['name'] ); ?>">Edit</a></li>
                                    <li><a class="button button-primary" href="<?php echo admin_url( $url . '&action=delete&name=' . $post_type['name'] ); ?>">Delete</a></li>
                                    <li><a class="button button-primary" href="<?php echo admin_url( 'edit.php?post_type=' . $post_type['name'] ); ?>">View</a></li>
                                </ul>
                            </th>
                            <td>
								<?php
								$taxes = get_object_taxonomies( $post_type['name'], 'objects' );

								if ( $taxes ) {
									?>
                                    <ul class="assigned-taxes">
										<?php foreach ( $taxes as $tax ) {
											?>
                                            <li><a href="<?php echo admin_url( 'edit-tags.php?taxonomy=' . $tax->name ); ?>"><?php echo $tax->label; ?></a></li>
											<?php
										} ?>
                                    </ul>
									<?php
								} else {
									echo 'No metadata have been assigned to this asset type.';
								}
								?>
                            </td>
                            <td>
								<?php echo $post_type['name']; ?>
                            </td>
                            <td class="text-center">
								<?php
								$args = [
									'post_type' => $post_type['name'],
								];

								$q = new WP_Query( $args );
								if ( $q->have_posts() ) {
									echo count( $q );
								} else {
									echo '0';
								}
								?>
                            </td>
                        </tr>
						<?php
					}
					?>
                    </tbody>
                </table>
				<?php
				if ( $is_dev ) {
					?>
                    <pre style="margin: 15px;">
                        <?php
                        echo '<br>';
                        $all_post_types = array_merge( get_post_types( [ '_builtin' => true ] ), get_post_types( [ '_builtin' => false ] ) );
                        //var_dump( get_page_by_path( 'weewoo', 'OBJECT', $all_post_types ) );
                        $slug = 'weewoo';
                        print_r( ( am_slug_exists( $slug ) ) ? $slug . ' exists' : $slug . ' doesn\'t exist' );
                        echo '<hr>';
                        print_r( $_POST );
                        ?>
                    </pre>
					<?php
				}
				?>
            </div>
        </div>
    </div>
	<?php
}
