<?php
/**
 * Display the html for our management pages
 * including forms, tables, and the icon
 * selector modal.
 *
 * @since 0.5.0
 */

function am_display_html() {
	$action        = ( empty( $_GET['action'] ) ) ? 'new' : $_GET['action'];
	$action_type   = ( 'edit' === $action ) ? 'Edit' : 'Add New';
	$current       = null;
	$is_dev        = am_is_dev();
	$post_types    = am_get_registered_post_types();
	$taxes         = am_get_registered_taxes();
	$which         = ( 'metadata' === am_which_page() ) ? 'metadata' : 'post_type';
	$label_example = ( 'metadata' !== $which ) ? 'post' : 'term';
	$ui            = new Asset_Manager\Admin_UI();
	$url           = ( 'metadata' !== $which ) ? 'admin.php?page=manage_post_types' : 'admin.php?page=manage_metadata';

	if ( 'edit' === $action ) {
		$current = ( 'metadata' !== $which ) ? $post_types[ $_GET['name'] ] : $taxes[ $_GET['name'] ];
	}

	?>

    <div class="wrap asset-manager-wrapper">
        <h2 class="sr-only notification-placeholder"></h2>
        <h1 class="wp-heading-inline"><?php echo get_admin_page_title(); ?></h1>
		<?php
		if ( 'edit' === $action ) {
			echo '<a class="page-title-action" href="' . admin_url( $url ) . '">Add New</a>';
		}
		?>
        <form method="post" action="<?php esc_url( admin_url( 'admin-post.php' ) ); ?>" id="asset-manager-form" class="mt-3">
            <div class="row">
                <div class="col-xs-12 col-lg-5">
                    <div class="section-wrapper">
                        <div class="section-header">
                            <h3><?php echo sprintf( __( '%s %s ', AM_TEXT ), $action_type, ucwords( str_replace( '_', ' ', $which ) ) ); ?></h3>
                        </div>
                        <div class="section-body">
							<?php wp_nonce_field( "am_{$which}_form_nonce_action", "am_{$which}_form_nonce_field" ); ?>
                            <input type="hidden" id="data_type" name="data_type" value="<?php echo strtolower( $which ); ?>">
                            <input type="hidden" id="page_action" name="page_action" value="<?php echo $action; ?>">
							<?php if ( 'edit' === $action && isset( $current ) ) : ?>
                                <input type="hidden" name="original" id="original" value="<?php echo $current['name']; ?>">
							<?php endif; ?>

							<?php
							/**
							 * Make the singular label text field
							 *
							 * @since 0.5.0
							 */
							echo $ui->make_text_field( [
								'desc'        => sprintf( esc_attr__( 'Please use only alphanumeric characters and spaces. This field also creates your %s slug.', AM_TEXT ), str_replace( '_', ' ', $which ) ),
								'label_text'  => esc_attr__( 'Singular Label', AM_TEXT ),
								'maxlength'   => 20,
								'name'        => 'singular_label',
								'placeholder' => sprintf( esc_attr__( '(e.g. %s)', AM_TEXT ), ucwords( $label_example ) ),
								'required'    => true,
								'value'       => ( ! empty( $current ) ) ? $current['singular_label'] : '',
							] );

							/**
							 * Make the plural label text field
							 *
							 * @since 0.5.0
							 */
							echo $ui->make_text_field( [
								'desc'        => sprintf( esc_attr__( 'This is the plural version of your %s name. Please use only alphanumeric characters and spaces', AM_TEXT ), str_replace( '_', ' ', $which ) ),
								'label_text'  => esc_attr__( 'Plural Label', AM_TEXT ),
								'maxlength'   => 20,
								'name'        => 'label',
								'placeholder' => sprintf( esc_attr__( '(e.g. %ss)', AM_TEXT ), ucwords( $label_example ) ),
								'required'    => true,
								'value'       => ( ! empty( $current ) ) ? $current['label'] : '',
							] );

							/**
							 * Make the name field, which is hidden
							 * and takes value from either the singular_label
							 * field (lowercase), or the value of $current['name'].
							 *
							 * @since 0.5.0
							 */
							echo $ui->make_text_field( [
								'desc'       => sprintf( esc_attr__( 'This is the slug of your %s. It is generated by filling in the Singular Label field above, but you may change it if necessary. Please use only letters, numbers, and the underscore character.', AM_TEXT ), str_replace( '_', ' ', $which ) ),
								'label_text' => esc_attr__( 'Name', AM_TEXT ),
								'maxlength'  => 20,
								'name'       => 'name',
								'value'      => ( ! empty( $current ) ) ? $current['name'] : '',
								'visible'    => true,
							] );
							?>
							<?php
							if ( 'edit' === $action && isset( $current ) ) {
								$terms = get_terms( [
									'taxonomy'   => $current['name'],
									'hide_empty' => false,
								] );
								$posts = get_posts( [
									'post_type' => $current['name'],
								] );

								if ( isset( $terms ) || isset( $posts ) ) {
									echo '<div class="row form-group update-posts-terms" style="display: none;">';

									if ( 'metadata' === $which ) {
										?>
                                        <div class="col-sm-3 checkbox-span">
                                            Migrate Terms
                                            <div class="checkbox-description form-text text-muted">
												<?php sprintf( __( 'You may migrate terms to the new name when you update a %s name.' ), str_replace( '_', ' ', $which ) ); ?>
                                            </div>
                                        </div>
                                        <div class="col-sm-9">
                                            <div class="form-check mb-1">
                                                <input type="checkbox" name="update_terms" class="form-check-input" id="update_terms" value="true">
                                                <label for="update_terms" class="form-check-label ml-1">
													<?php sprintf( __( 'Migrate terms to the renamed %s type' ), str_replace( '_', ' ', $which ) ); ?>
                                                </label>
                                            </div>
                                        </div>
										<?php
									} else {
										?>
                                        <div class="col-sm-3 checkbox-span">
                                            Migrate Posts
                                            <div class="checkbox-description form-text text-muted">
                                                You may migrate posts to the new name when you update a post type name.
                                            </div>
                                        </div>
                                        <div class="col-sm-9">
                                            <div class="form-check mb-1">
                                                <input type="checkbox" name="update_posts" class="form-check-input" id="update_posts" value="true">
                                                <label for="update_posts" class="form-check-label ml-1">Migrate posts to the renamed post type</label>
                                            </div>
                                        </div>
										<?php
									}

									echo '</div>';
								}
							}

							if ( 'metadata' !== $which ) {
								/**
								 * Make the menu icon field
								 */
								echo $ui->make_input_group( [
									'btn_text'    => esc_attr__( 'Select Icon', AM_TEXT ),
									'desc'        => sprintf( __( 'Select an icon for your %s. The menu icon will only be visible if Show in Menu is set to Yes.', AM_TEXT ), str_replace( '_', ' ', $which ) ),
									'label_text'  => esc_attr__( 'Menu Icon', AM_TEXT ),
									'name'        => 'menu_icon',
									'placeholder' => esc_attr__( 'wordpress_dashicons-admin-generic', AM_TEXT ),
									'required'    => false,
									'value'       => ( ! empty ( $current ) ) ? $current['menu_icon'] : '',

								] );
							}
							?>
							<?php
							/**
							 * Allow the asset or metadata type to be
							 * displayed and used publicly?
							 *
							 * @since 0.5.0
							 */
							$select['options'] = [
								[
									'text'  => esc_attr__( 'No', AM_TEXT ),
									'value' => '0'
								],
								[
									'default' => true,
									'text'    => esc_attr__( 'Yes', AM_TEXT ),
									'value'   => '1'
								]
							];

							$selected           = isset( $current ) ? am_coerce_bool( $current['public'] ) : '';
							$select['selected'] = ( ! empty( $selected ) ) ? $current['public'] : '';

							echo $ui->make_select_field( [
								'classes'    => false,
								'desc'       => sprintf( esc_attr__( 'Allow instances of this %s to be displayed publicly?', AM_TEXT ), str_replace( '_', ' ', $which ) ),
								'label_text' => esc_attr__( 'Public', AM_TEXT ),
								'name'       => 'public',
								'selections' => $select,
							] );
							?>
							<?php
							/**
							 * Where should this asset type be displayed in the
							 * admin sidebar menu?
							 *
							 * @since 0.5.0
							 */
							$select['options'] = [
								[
									'default' => true,
									'text'    => esc_attr__( 'No', AM_TEXT ),
									'value'   => '0'
								],
								[
									'text'  => esc_attr__( 'Yes', AM_TEXT ),
									'value' => '1'
								]
							];

							$selected           = isset( $current ) ? am_coerce_bool( $current['show_in_menu'] ) : '';
							$select['selected'] = ( ! empty( $selected ) ) ? $current['show_in_menu'] : '';

							if ( 'metadata' !== $which ) {
								$desc = sprintf( esc_attr__( 'Show this %s in the sidebar administration menu?', AM_TEXT ), str_replace( '_', ' ', $which ) );

							} else {
								$desc = sprintf( esc_attr__( 'Show this %s in the post type menu? For this to be visible, show in menu must be set to yes for the post type.', AM_TEXT ), str_replace( '_', ' ', $which ) );
							}
							echo $ui->make_select_field( [
								'classes'    => false,
								'desc'       => $desc,
								'label_text' => esc_attr__( 'Show in Menu', AM_TEXT ),
								'name'       => 'show_in_menu',
								'selections' => $select,
							] );
							?>
							<?php
							if ( 'metadata' !== $which ) {

								/**
								 * Select whether the new asset type is available via
								 * the admin bar at the top of the screen
								 *
								 * @since 0.5.0
								 */
								$select['options'] = [
									[
										'text'  => esc_attr__( 'No', AM_TEXT ),
										'value' => '0'
									],
									[
										'default' => true,
										'text'    => esc_attr__( 'Yes', AM_TEXT ),
										'value'   => '1'
									]
								];

								$selected           = isset( $current ) ? am_coerce_bool( $current['show_in_admin_bar'] ) : '';
								$select['selected'] = ( ! empty( $selected ) ) ? $current['show_in_admin_bar'] : '';

								echo $ui->make_select_field( [
									'classes'    => false,
									'desc'       => sprintf( esc_attr__( 'Make this %s available from the + menu on the top administration bar?', AM_TEXT ), str_replace( '_', ' ', $which ) ),
									'label_text' => esc_attr__( 'Show in Admin Bar', AM_TEXT ),
									'name'       => 'show_in_admin_bar',
									'selections' => $select,
								] );

							} else {
								/**
								 * Select whether to show metadata terms in the tag cloud widget
								 *
								 * @since 0.5.0
								 */
								$select['options'] = [
									[
										'text'  => esc_attr__( 'No', AM_TEXT ),
										'value' => '0'
									],
									[
										'default' => true,
										'text'    => esc_attr__( 'Yes', AM_TEXT ),
										'value'   => '1'
									]
								];

								$selected           = isset( $current ) ? am_coerce_bool( $current['show_tagcloud'] ) : '';
								$select['selected'] = ( ! empty( $selected ) ) ? $current['show_tagcloud'] : '';

								echo $ui->make_select_field( [
									'classes'    => false,
									'desc'       => sprintf( esc_attr__( 'Display this %s in Tag Cloud Widget controls?', AM_TEXT ), str_replace( '_', ' ', $which ) ),
									'label_text' => esc_attr__( 'Show in Tag Cloud', AM_TEXT ),
									'name'       => 'show_tagcloud',
									'selections' => $select,
								] );

								/**
								 * Select whether to show metadata terms in the tag cloud widget
								 *
								 * @since 0.5.0
								 */
								$select['options'] = [
									[
										'text'  => esc_attr__( 'No', AM_TEXT ),
										'value' => '0'
									],
									[
										'default' => true,
										'text'    => esc_attr__( 'Yes', AM_TEXT ),
										'value'   => '1'
									]
								];

								$selected           = isset( $current ) ? am_coerce_bool( $current['show_in_quick_edit'] ) : '';
								$select['selected'] = ( ! empty( $selected ) ) ? $current['show_in_quick_edit'] : '';

								echo $ui->make_select_field( [
									'classes'    => false,
									'desc'       => sprintf( esc_attr__( 'Show this %s in quick/bulk edit panels?', AM_TEXT ), str_replace( '_', ' ', $which ) ),
									'label_text' => esc_attr__( 'Show in Quick Edit', AM_TEXT ),
									'name'       => 'show_in_quick_edit',
									'selections' => $select,
								] );

								/**
								 * Select whether to show metadata terms in the tag cloud widget
								 *
								 * @since 0.5.0
								 */
								$select['options'] = [
									[
										'default' => true,
										'text'    => esc_attr__( 'No', AM_TEXT ),
										'value'   => '0'
									],
									[
										'text'  => esc_attr__( 'Yes', AM_TEXT ),
										'value' => '1'
									]
								];

								$selected           = isset( $current ) ? am_coerce_bool( $current['show_admin_column'] ) : '';
								$select['selected'] = ( ! empty( $selected ) ) ? $current['show_admin_column'] : '';

								echo $ui->make_select_field( [
									'classes'    => false,
									'desc'       => sprintf( esc_attr__( 'Display this %s in its own column on the asset type listing screen?', AM_TEXT ), str_replace( '_', ' ', $which ) ),
									'label_text' => esc_attr__( 'Show Admin Column', AM_TEXT ),
									'name'       => 'show_admin_column',
									'selections' => $select,
								] );
							}
							?>
							<?php
							/**
							 * Should this asset or metadata type be hierarchical, like pages?
							 *
							 * @since 0.5.0
							 */
							$select['options'] = [
								[
									'default' => true,
									'text'    => esc_attr__( 'No', AM_TEXT ),
									'value'   => '0'
								],
								[
									'text'  => esc_attr__( 'Yes', AM_TEXT ),
									'value' => '1'
								]
							];

							$selected           = isset( $current ) ? am_coerce_bool( $current['hierarchical'] ) : '';
							$select['selected'] = ( ! empty( $selected ) ) ? $current['hierarchical'] : '';

							if ( 'metadata' !== $which ) {
								$desc = sprintf( esc_attr__( 'Should this %s have parent/child relationships (like pages)?', AM_TEXT ), str_replace( '_', ' ', $which ) );
							} else {
								$desc = sprintf( esc_attr__( 'Should this %s have parent/child relationships (like categories)?', AM_TEXT ), str_replace( '_', ' ', $which ) );
							}
							echo $ui->make_select_field( [
								'classes'    => false,
								'desc'       => $desc,
								'label_text' => esc_attr__( 'Hierarchical', AM_TEXT ),
								'name'       => 'hierarchical',
								'selections' => $select,
							] );
							?>
							<?php
							/**
							 * Output the description textarea field
							 *
							 * @since 0.5.0
							 */
							echo $ui->make_textarea_field( [
								'desc'        => esc_attr__( 'This text may or may not appear on the front-end depending on theme settings.', AM_TEXT ),
								'label_text'  => esc_attr__( 'Description', AM_TEXT ),
								'name'        => 'description',
								'placeholder' => sprintf( esc_attr__( 'Enter a short description of your %s', AM_TEXT ), str_replace( '_', ' ', $which ) ),
								'rows'        => '4',
								'value'       => ( ! empty( $current['description'] ) ) ? $current['description'] : '',
							] );
							?>
                            <!--							--><?php
							///*							if ( 'metadata' !== $which ) {
							//
							//								/**
							//								 * Output editor function support checkboxes
							//								 *
							//								 * @since 0.5.0
							//								 */
							//								$checkboxes['boxes'] = [
							//									[
							//										'checked' => true,
							//										'value'   => 'title',
							//										'label'   => esc_attr__( 'Title', AM_TEXT ),
							//									],
							//									[
							//										'checked' => true,
							//										'value'   => 'editor',
							//										'label'   => esc_attr__( 'Editor', AM_TEXT ),
							//									],
							//									[
							//										'checked' => false,
							//										'value'   => 'comments',
							//										'label'   => esc_attr__( 'Comments', AM_TEXT ),
							//									],
							//									[
							//										'checked' => true,
							//										'value'   => 'revisions',
							//										'label'   => esc_attr__( 'Revisions', AM_TEXT ),
							//									],
							//									[
							//										'checked' => false,
							//										'value'   => 'trackbacks',
							//										'label'   => esc_attr__( 'Trackbacks', AM_TEXT ),
							//									],
							//									[
							//										'checked' => true,
							//										'value'   => 'author',
							//										'label'   => esc_attr__( 'Author', AM_TEXT ),
							//									],
							//									[
							//										'checked' => true,
							//										'value'   => 'excerpt',
							//										'label'   => esc_attr__( 'Excerpt', AM_TEXT ),
							//									],
							//									[
							//										'checked' => false,
							//										'value'   => 'page-attributes',
							//										'label'   => esc_attr__( 'Page Attributes', AM_TEXT ),
							//									],
							//									[
							//										'checked' => true,
							//										'value'   => 'thumbnail',
							//										'label'   => esc_attr__( 'Thumbnail', AM_TEXT ),
							//									],
							//									[
							//										'checked' => false,
							//										'value'   => 'custom-fields',
							//										'label'   => esc_attr__( 'Custom Fields', AM_TEXT ),
							//									],
							//									[
							//										'checked' => true,
							//										'value'   => 'post-formats',
							//										'label'   => esc_attr__( 'Post Formats', AM_TEXT ),
							//									],
							//
							//								];
							//
							//								// TODO: Use checked items from $current arrays to populate supports, added_taxonomies, and added_post_types arrays
							//
							//								echo $ui->make_checkboxes( [
							//									'description' => esc_attr__( 'Assign desired editor screen features to this asset type', AM_TEXT ),
							//									'label_text'  => esc_attr__( 'Supported Options', AM_TEXT ),
							//									'name'        => 'supports',
							//									'checkboxes'  => $checkboxes,
							//								] );
							//
							//								if ( ! empty( $taxes ) ) {
							//									$checkboxes['boxes'] = [];
							//
							//									foreach ( $taxes as $tax ) {
							//										$checkboxes['boxes'][] = [
							//											'checked'    => false,
							//											'value'      => $tax['name'],
							//											'value_type' => 'added_taxonomies',
							//											'label'      => $tax['label'],
							//										];
							//									}
							//
							//									// $checked            = isset( $current ) ? am_coerce_bool( $current['taxonomies'] ) : '';
							//									// $checkboxes['checked'] = ( ! empty( $checked ) ) ? $current['taxonomies'] : '';
							//
							//									echo $ui->make_checkboxes( [
							//										'description' => esc_attr__( 'Choose from available registered metadata to assign them to this asset type', AM_TEXT ),
							//										'label_text'  => esc_attr__( 'Metadata', AM_TEXT ),
							//										'name'        => 'taxonomies',
							//										'checkboxes'  => $checkboxes,
							//									] );
							//								} else {
							//									*/?>
                            <!--                                    <div class="row">-->
                            <!--                                        <div class="col">-->
                            <!--                                            <p class="text-center">-->
							<?php ///*echo __( 'No metadata types have been created. You may continue with asset type creation and assign metadata later.',
							//													AM_TEXT ); */?><!--</p>-->
                            <!--                                        </div>-->
                            <!--                                    </div>-->
                            <!--									--><?php
							///*								}
							//
							//							} else {
							//								if ( ! empty( $post_types ) ) {
							//									// TODO Change this so that it only displays taxonomies created through our plugin? Need to discuss.
							//									$checkboxes['boxes'] = [];
							//
							//									foreach ( $post_types as $post_type ) {
							//										$checkboxes['boxes'][] = [
							//											'checked'    => false,
							//											'value'      => $post_type['name'],
							//											'value_type' => 'added_post_types',
							//											'label'      => $post_type['label'],
							//										];
							//									}
							//
							//									// $checked            = isset( $current ) ? am_coerce_bool( $current['hierarchical'] ) : '';
							//									// $select['selected'] = ( ! empty( $selected ) ) ? $current['hierarchical'] : '';
							//
							//									echo $ui->make_checkboxes( [
							//										'description' => esc_attr__( 'Choose from available registered asset types to assign this metadata', AM_TEXT ),
							//										'label_text'  => sprintf( esc_attr__( '%s Types', AM_TEXT ), ucwords( $which ) ),
							//										'name'        => 'post_types',
							//										'checkboxes'  => $checkboxes,
							//									] );
							//								} else {
							//									*/?>
                            <!--                                    <div class="row">-->
                            <!--                                        <div class="col">-->
                            <!--                                            <p class="text-center">-->
							<?php ///*echo __( 'No asset types have been created. You may continue with asset type creation and assign metadata later.',
							//													AM_TEXT ); */?><!--</p>-->
                            <!--                                        </div>-->
                            <!--                                    </div>-->
                            <!--									--><?php
							///*								}
							//							}
							//							*/?>
                        </div>
                        <div class="section-footer">
                            <input type="submit" class="button button-primary" id="am_submit" name="am_submit"
                                   value="<?php echo sprintf( __( '%s %s', AM_TEXT ), $action_type, ucwords( str_replace( '_', ' ', $which ) ) ); ?>">
							<?php if ( 'edit' === $action ) : ?>
                                <input type="submit" name="am_delete" class="button button-secondary ml-2" id="am_delete"
                                       value="<?php echo sprintf( __( 'Delete %s', AM_TEXT ), ucwords( str_replace( '_', ' ', $which ) ) ); ?>">
							<?php else : ?>
                                <input type="reset" class="button button-secondary ml-2" value="<?php echo esc_attr__( 'Reset Form', AM_TEXT ); ?>">
							<?php endif; ?>
                        </div>
                    </div>
                </div>
                <div class="col-xs-12 col-lg-7">
                    <!-- TODO Move the table display to its own function -->
                    <div class="section-wrapper at-a-glance">
                        <div class="section-header">
                            <h3><?php echo __( 'At a Glance', AM_TEXT ); ?></h3>
                        </div>
                        <div class="section-body asset-manager-table-wrapper">
                            <table class="table table-striped asset-manager-table">
                                <thead>
                                <tr>
                                    <th scope="col"><?php echo ucwords( str_replace( '_', ' ', $which ) ); ?></th>
                                    <th scope="col">Description</th>
									<?php if ( 'metadata' !== $which ) : ?>
                                        <th scope="col">Available Metadata Types</th>
									<?php else : ?>
                                        <th scope="col">Assigned Terms</th>
									<?php endif; ?>
                                    <th scope="col">Slug</th>
                                    <th scope="col" class="text-center">Count</th>
                                </tr>
                                </thead>
                                <tbody>
								<?php
								if ( 'metadata' !== $which ) {
									if ( $post_types ) {
										foreach ( $post_types as $cpt ) {
											?>
                                            <tr>
                                                <td>
                                                    <a class="row-title"
                                                       href="<?php echo admin_url( 'edit.php?post_type=' . $cpt['name'] ); ?>"><strong><?php echo $cpt['label']; ?></strong></a>
                                                    <br>
                                                    <ul class="row-options">
                                                        <li><a href="<?php echo admin_url( $url . '&action=edit&name=' . $cpt['name'] ); ?>">Edit</a>
                                                        </li>
                                                        <li><a href="<?php echo admin_url( 'edit.php?post_type=' . $cpt['name'] ); ?>">View</a></li>
                                                    </ul>
                                                </td>
                                                <td>
													<?php echo ( ! empty( $cpt['description'] ) ) ? $cpt['description'] : '—'; ?>
                                                </td>
                                                <td>
													<?php
													$taxes = get_object_taxonomies( $cpt['name'], 'objects' );

													if ( ! empty( $taxes ) ) {
														?>
                                                        <ul class="term-list">
															<?php foreach ( $taxes as $tax ) : ?>
                                                                <li>
																	<?php echo $tax->label; ?>
                                                                </li>
															<?php endforeach; ?>
                                                        </ul>
														<?php
													} else {
														echo 'No metadata have been assigned to this post type.';
													}
													?>
                                                </td>
                                                <td><?php echo $cpt['name']; ?></td>
                                                <td class="text-center">
													<?php
													$posts_count = get_posts( [
														'post_type' => $cpt['name']
													] );
													echo count( $posts_count );
													?>
                                                </td>
                                            </tr>
											<?php
										}
									} else {
										?>
                                        <tr>
                                            <td colspan="5" class="text-center">
												<?php echo sprintf( __( 'No %s types have been created', AM_TEXT ), $which ); ?>
                                            </td>
                                        </tr>
										<?php
									}
								} else {
									if ( $taxes ) {
										foreach ( $taxes as $tax ) {
											?>
                                            <tr>
                                                <th scope="row">
                                                    <a class="row-title" href="<?php echo admin_url( 'edit-tags.php?taxonomy=' . $tax['name'] ); ?>">
                                                        <strong><?php echo $tax['label']; ?></strong>
                                                    </a>
                                                    <br>
                                                    <ul class="row-options">
                                                        <li><a href="<?php echo admin_url( $url . '&action=edit&name=' . $tax['name'] ); ?>">Edit</a>
                                                        </li>
                                                        <li><a href="<?php echo admin_url( 'edit-tags.php?taxonomy=' . $tax['name'] ); ?>">View</a>
                                                        </li>
                                                    </ul>
                                                </th>
                                                <td>
													<?php echo ( ! empty( $tax['description'] ) ) ? $tax['description'] : '—'; ?>
                                                </td>
                                                <td>
													<?php
													$terms = get_terms( [
														'taxonomy'   => $tax['name'],
														'hide_empty' => false,
													] );
													if ( ! empty( $terms ) ) {
														?>
                                                        <ul class="term-list">
															<?php foreach ( $terms as $term ) : ?>
                                                                <li>
																	<?php echo $term->name; ?>
                                                                </li>
															<?php endforeach; ?>
                                                        </ul>
														<?php
													} else {
														echo 'No terms have been created for this metadata type.';
													}
													?>
                                                </td>
                                                <td><?php echo $tax['name']; ?></td>
                                                <td class="text-center">
													<?php
													$terms_count = wp_count_terms( [
														'taxonomy'   => $tax['name'],
														'hide_empty' => false,
													] );
													if ( ! empty( $terms_count ) ) {
														echo $terms_count;
													} else {
														echo '0';
													}
													?>
                                                </td>
                                            </tr>
											<?php

										}
									} else {
										?>
                                        <tr>
                                            <td colspan="5" class="text-center">
												<?php echo sprintf( __( 'No %s types have been created', AM_TEXT ), $which ); ?>
                                            </td>
                                        </tr>
										<?php
									}
								}
								?>
                                </tbody>
                            </table>
                        </div>
						<?php if ( $is_dev ) : ?>
                            <pre class="mr-2 ml-2 mb-2">
                            <?php

                            echo '<br>';
                            if ( ! empty( $_POST ) ) {
	                            print_r( $_POST );
                            }
                            echo '<hr>';
                            $terms          = get_terms( [
	                            'taxonomy'   => 'color',
	                            'hide_empty' => false,
	                            //'fields'     => 'ids',
                            ] );
                            $all_post_types = array_merge( get_post_types( [ '_builtin' => true ] ), get_post_types( [ '_builtin' => false ] ) );
                            print_r( $all_post_types );

                            ?>
                            </pre>
						<?php endif; ?>
                    </div>
                </div>
            </div>
        </form>
    </div>
	<?php

	if ( 'metadata' !== $which ) {
		am_icons_modal();
	}
}